<?php

/**
 * BaseSong
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $album_id
 * @property integer $genre_id
 * @property string $song_nm
 * @property blob $music
 * @property Album $Album
 * @property Genre $Genre
 * @property Doctrine_Collection $song_id
 * 
 * @method integer             getId()       Returns the current record's "id" value
 * @method integer             getAlbumId()  Returns the current record's "album_id" value
 * @method integer             getGenreId()  Returns the current record's "genre_id" value
 * @method string              getSongNm()   Returns the current record's "song_nm" value
 * @method blob                getMusic()    Returns the current record's "music" value
 * @method Album               getAlbum()    Returns the current record's "Album" value
 * @method Genre               getGenre()    Returns the current record's "Genre" value
 * @method Doctrine_Collection getSongId()   Returns the current record's "song_id" collection
 * @method Song                setId()       Sets the current record's "id" value
 * @method Song                setAlbumId()  Sets the current record's "album_id" value
 * @method Song                setGenreId()  Sets the current record's "genre_id" value
 * @method Song                setSongNm()   Sets the current record's "song_nm" value
 * @method Song                setMusic()    Sets the current record's "music" value
 * @method Song                setAlbum()    Sets the current record's "Album" value
 * @method Song                setGenre()    Sets the current record's "Genre" value
 * @method Song                setSongId()   Sets the current record's "song_id" collection
 * 
 * @package    musicapp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSong extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('song_tb');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('album_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('genre_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('song_nm', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('music', 'blob', null, array(
             'type' => 'blob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Album', array(
             'local' => 'album_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Genre', array(
             'local' => 'genre_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Features as song_id', array(
             'local' => 'id',
             'foreign' => 'song_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}