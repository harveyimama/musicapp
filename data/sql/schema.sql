CREATE TABLE album_tb (id BIGINT AUTO_INCREMENT, album_nm VARCHAR(255), artist_id BIGINT, release_dt DATE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX artist_id_idx (artist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE artist_tb (id BIGINT AUTO_INCREMENT, artist_nm VARCHAR(255), real_nm VARCHAR(255), dob DATE, country_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX country_id_idx (country_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE country_tb (id BIGINT AUTO_INCREMENT, country_nm VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE features_tb (id BIGINT AUTO_INCREMENT, song_id BIGINT, artist_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX song_id_idx (song_id), INDEX artist_id_idx (artist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE genre_tb (id BIGINT AUTO_INCREMENT, name VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE playlist_tb (id BIGINT AUTO_INCREMENT, name VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE playlist_song_tb (id BIGINT AUTO_INCREMENT, playlist_id BIGINT, song_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX song_id_idx (song_id), INDEX playlist_id_idx (playlist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE song_tb (id BIGINT AUTO_INCREMENT, album_id BIGINT, genre_id BIGINT, song_nm VARCHAR(255), music LONGBLOB, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX album_id_idx (album_id), INDEX genre_id_idx (genre_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE story_tb (id BIGINT AUTO_INCREMENT, title VARCHAR(50), story VARCHAR(255), artist_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX artist_id_idx (artist_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE td_config (id BIGINT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, value TEXT NOT NULL, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX name_unique_idx (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE td_link (id BIGINT AUTO_INCREMENT, url VARCHAR(255) NOT NULL, description TEXT NOT NULL, active TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX active_index_idx (active), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE td_subpage (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, content TEXT NOT NULL, active TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX td_subpage_sluggable_idx (slug), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
ALTER TABLE album_tb ADD CONSTRAINT album_tb_artist_id_artist_tb_id FOREIGN KEY (artist_id) REFERENCES artist_tb(id) ON DELETE CASCADE;
ALTER TABLE artist_tb ADD CONSTRAINT artist_tb_country_id_country_tb_id FOREIGN KEY (country_id) REFERENCES country_tb(id) ON DELETE CASCADE;
ALTER TABLE features_tb ADD CONSTRAINT features_tb_song_id_song_tb_id FOREIGN KEY (song_id) REFERENCES song_tb(id) ON DELETE CASCADE;
ALTER TABLE features_tb ADD CONSTRAINT features_tb_artist_id_artist_tb_id FOREIGN KEY (artist_id) REFERENCES artist_tb(id) ON DELETE CASCADE;
ALTER TABLE playlist_song_tb ADD CONSTRAINT playlist_song_tb_song_id_song_tb_id FOREIGN KEY (song_id) REFERENCES song_tb(id) ON DELETE CASCADE;
ALTER TABLE playlist_song_tb ADD CONSTRAINT playlist_song_tb_playlist_id_playlist_tb_id FOREIGN KEY (playlist_id) REFERENCES playlist_tb(id) ON DELETE CASCADE;
ALTER TABLE song_tb ADD CONSTRAINT song_tb_genre_id_genre_tb_id FOREIGN KEY (genre_id) REFERENCES genre_tb(id) ON DELETE CASCADE;
ALTER TABLE song_tb ADD CONSTRAINT song_tb_album_id_album_tb_id FOREIGN KEY (album_id) REFERENCES album_tb(id) ON DELETE CASCADE;
ALTER TABLE story_tb ADD CONSTRAINT story_tb_artist_id_artist_tb_id FOREIGN KEY (artist_id) REFERENCES artist_tb(id) ON DELETE CASCADE;
